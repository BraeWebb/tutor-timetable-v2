image: node:14

definitions:
  services:
    postgres-test:
      image: postgres:13
      variables:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: tutor-timetable-v2-test
  steps:
    - step: &build-test
        name: Lint, Test and Test Build
        script:
          - yarn
          - yarn eslint-check && yarn prettier-check
          - yarn build
          - cp .env.example .env && yarn test
        services:
          - postgres-test

pipelines:
  pull-requests:
    "**":
      - step: *build-test
    "{feature,story,bugfix}/*":
      - step: *build-test
      - step:
          name: 'Deployment to Staging'
          deployment: staging
          script:
            - chmod +x ./scripts/staging/deploy.sh
            - ./scripts/staging/deploy.sh $(cut -d'/' -f2 <<<$BITBUCKET_BRANCH | tr '[:upper:]' '[:lower:]')
  branches:
    development:
      - step: *build-test
      - step:
          name: 'Push changes back to github'
          script:
            - git config user.name "Mike Pham"
            - git config user.email "31090859+mike-fam@users.noreply.github.com"
            - git remote add github git@github.com:mike-fam/tutor-timetable-v2.git
            - git push github development:main
      - step:
          name: 'Deployment to Production'
          deployment: production
          trigger: 'manual'
          script:
            - SSH_PATH="$HOME/.ssh" && mkdir -p "$SSH_PATH" && touch "$SSH_PATH/known_hosts"
            - echo "$PRIVATE_KEY_B64" | base64 --decode > "$SSH_PATH/deploy_key"
            - chmod 700 "$SSH_PATH" && chmod 600 "$SSH_PATH/known_hosts" "$SSH_PATH/deploy_key"
            - eval $(ssh-agent)
            - printf '%s\n' 'Host *.eait.uq.edu.au' '  StrictHostKeyChecking no' 'Host *.zones.eait.uq.edu.au' "  ProxyJump $USER@moss.labs.eait.uq.edu.au" > "$SSH_PATH/config"
            - ssh-add "$SSH_PATH/deploy_key"
            - >-
              ssh -i "$SSH_PATH/deploy_key" "$USER@$HOST"
              "cd /var/www/nodejs/ &&
              rm -rf tutor-timetable-v2 &&
              git clone git@github.com:mike-fam/tutor-timetable-v2.git &&
              cd tutor-timetable-v2 &&
              yarn &&
              rm -rf build &&
              yarn build &&
              yarn migration-run &&
              echo "$PW" | sudo -S systemctl restart nodejs &&
              history -c"
